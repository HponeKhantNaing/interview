[
  {"question": "What is the difference between authentication and authorization?","answer": "Authentication verifies who a user is (login process), while authorization determines what a user can access (permissions). Authentication comes first, then authorization. For example, logging in with username/password is authentication, while checking if a user can access admin pages is authorization.","topics": ["authentication", "authorization", "security", "web security"]},
  {"question": "Explain the concept of SQL injection and how to prevent it.","answer": "SQL injection occurs when malicious SQL code is inserted into input fields. Attackers can manipulate database queries to access unauthorized data. Prevention includes using parameterized queries, input validation, and ORM libraries that automatically escape inputs.","topics": ["sql injection", "security", "web security", "input validation"]},
  {"question": "What is the difference between XSS and CSRF attacks?","answer": "XSS (Cross-Site Scripting) injects malicious scripts into web pages viewed by users, while CSRF (Cross-Site Request Forgery) tricks users into performing unwanted actions on sites they're authenticated to. XSS targets users, CSRF targets authenticated sessions.","topics": ["xss", "csrf", "security", "web security"]},
  {"question": "Explain the concept of HTTPS and SSL/TLS.","answer": "HTTPS is HTTP over SSL/TLS encryption, providing secure communication between client and server. SSL/TLS encrypts data in transit, preventing man-in-the-middle attacks and ensuring data integrity. HTTPS is essential for protecting sensitive data and user privacy.","topics": ["https", "ssl", "tls", "security", "encryption"]},
  {"question": "What is the difference between symmetric and asymmetric encryption?","answer": "Symmetric encryption uses the same key for encryption and decryption, while asymmetric encryption uses different keys (public and private). Symmetric is faster but requires secure key exchange, while asymmetric is slower but provides better key management.","topics": ["encryption", "symmetric", "asymmetric", "security"]},
  {"question": "Explain the concept of password hashing and salting.","answer": "Password hashing converts passwords into irreversible hash values. Salting adds random data to passwords before hashing to prevent rainbow table attacks. Popular hashing algorithms include bcrypt, scrypt, and Argon2, which are designed to be slow and resistant to brute force attacks.","topics": ["password hashing", "salting", "security", "bcrypt"]},
  {"question": "What is the difference between JWT and session-based authentication?","answer": "JWT (JSON Web Tokens) are stateless and contain user information, while session-based authentication stores session data on the server. JWTs are more scalable but harder to invalidate, while sessions are easier to manage but require server storage.","topics": ["jwt", "session", "authentication", "security"]},
  {"question": "Explain the concept of OAuth 2.0 and its flows.","answer": "OAuth 2.0 is an authorization framework that allows third-party applications to access user resources without sharing credentials. Flows include authorization code, implicit, client credentials, and resource owner password. It's widely used for API authentication and social login.","topics": ["oauth", "authorization", "security", "api"]},
  {"question": "What is the difference between penetration testing and vulnerability scanning?","answer": "Penetration testing is manual testing that simulates real attacks to find security vulnerabilities, while vulnerability scanning uses automated tools to identify known vulnerabilities. Penetration testing is more thorough but expensive, while vulnerability scanning is faster and cheaper.","topics": ["penetration testing", "vulnerability scanning", "security", "testing"]},
  {"question": "Explain the concept of input validation and sanitization.","answer": "Input validation checks if data meets expected format and rules, while sanitization removes or escapes potentially dangerous characters. Both are essential for preventing injection attacks. Validation should happen on both client and server sides, with server-side validation being critical.","topics": ["input validation", "sanitization", "security", "web security"]},
  {"question": "What is the difference between HTTP and HTTPS cookies?","answer": "HTTP cookies are sent in plain text and can be intercepted, while HTTPS cookies are encrypted and secure. Secure cookies should only be sent over HTTPS connections. Additional security flags include HttpOnly (prevents JavaScript access) and SameSite (prevents CSRF).","topics": ["cookies", "https", "security", "web security"]},
  {"question": "Explain the concept of rate limiting and its security benefits.","answer": "Rate limiting restricts the number of requests a client can make in a given time period. It prevents brute force attacks, DDoS attacks, and API abuse. Common algorithms include token bucket, leaky bucket, and fixed window counters.","topics": ["rate limiting", "security", "ddos", "brute force"]},
  {"question": "What is the difference between white hat and black hat hackers?","answer": "White hat hackers (ethical hackers) test systems with permission to find and fix security vulnerabilities, while black hat hackers exploit vulnerabilities for malicious purposes. White hat hacking is legal and beneficial, while black hat hacking is illegal and harmful.","topics": ["white hat", "black hat", "hacking", "security"]},
  {"question": "Explain the concept of security headers and their importance.","answer": "Security headers provide additional protection against various attacks. Common headers include Content-Security-Policy (prevents XSS), X-Frame-Options (prevents clickjacking), and Strict-Transport-Security (enforces HTTPS). Headers should be configured on web servers and applications.","topics": ["security headers", "csp", "web security", "xss"]},
  {"question": "What is the difference between encryption at rest and encryption in transit?","answer": "Encryption at rest protects data stored on disks or databases, while encryption in transit protects data moving between systems. Both are essential for comprehensive security. At-rest encryption prevents data theft from storage, while in-transit encryption prevents interception during transmission.","topics": ["encryption", "security", "data protection", "privacy"]},
  {"question": "Explain the concept of multi-factor authentication (MFA).","answer": "MFA requires multiple forms of verification to access an account. Factors include something you know (password), something you have (phone), and something you are (fingerprint). MFA significantly improves security by adding additional layers of protection beyond passwords.","topics": ["mfa", "multi-factor", "authentication", "security"]},
  {"question": "What is the difference between vulnerability assessment and penetration testing?","answer": "Vulnerability assessment identifies and categorizes security weaknesses, while penetration testing exploits vulnerabilities to demonstrate their impact. Assessment is more comprehensive and systematic, while penetration testing is more focused on exploitation and real-world scenarios.","topics": ["vulnerability assessment", "penetration testing", "security", "testing"]},
  {"question": "Explain the concept of secure coding practices.","answer": "Secure coding practices include input validation, output encoding, proper error handling, and following the principle of least privilege. Developers should use secure libraries, keep dependencies updated, and follow security guidelines like OWASP Top 10.","topics": ["secure coding", "owasp", "security", "development"]},
  {"question": "What is the difference between public key infrastructure (PKI) and certificate authorities (CA)?","answer": "PKI is the framework for managing digital certificates and public key encryption, while CA is an organization that issues and validates digital certificates. PKI includes the entire system, while CA is a specific component that verifies certificate authenticity.","topics": ["pki", "ca", "certificates", "security"]},
  {"question": "Explain the concept of security by design.","answer": "Security by design integrates security considerations into every stage of the development lifecycle. It includes threat modeling, secure architecture design, and regular security reviews. Security should be built into applications from the beginning, not added as an afterthought.","topics": ["security by design", "threat modeling", "security", "development"]}
] 